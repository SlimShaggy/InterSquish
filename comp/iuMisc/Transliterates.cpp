//---------------------------------------------------------------------------
//
//
//
//    Copyright (c) 1999 Ivan Uskov (ivus@tele-kom.ru, 2:5055/101.3@fidonet)
//---------------------------------------------------------------------------
#include <stdio.h>
#include "Transliterates.h"
#include "log.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)

 char cINET2FTN[]={//cKOI2OEM[]={
// 0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F
  0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0a,0x0b,0x0c,0x0d,0x0e,0x0f,//0
  0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1a,0x1b,0x1c,0x1d,0x1e,0x1f,//1
  0x20,0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,0x2a,0x2b,0x2c,0x2d,0x2e,0x2f,//2
  0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3a,0x3b,0x3c,0x3d,0x3e,0x3f,//3
  0x40,0x41,0x42,0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4a,0x4b,0x4c,0x4d,0x4e,0x4f,//4
  0x50,0x51,0x52,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5a,0x5b,0x5c,0x5d,0x5e,0x5f,//5
  0x60,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6a,0x6b,0x6c,0x6d,0x6e,0x6f,//6
  0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7a,0x7b,0x7c,0x7d,0x7e,0x7f,//7
  0xc4,0xb3,0xda,0xbf,0xc0,0xd9,0xc3,0xb4,0xc2,0xc1,0xc5,0xdf,0xdc,0xdb,0xdd,0xde,//8
  0xb0,0xb1,0xb2,0xf4,0xfe,0xf9,0xfb,0xf7,0xf3,0xf2,0xff,0xf5,0xf8,0xfd,0xfa,0xf6,//9
  0xcd,0xba,0xd5,0xf1,0xd6,0xc9,0xb8,0xb7,0xbb,0xd4,0xd3,0xc8,0xbe,0xbd,0xbc,0xc6,//A
  0xc7,0xcc,0xb5,0xf0,0xb6,0xb9,0xd1,0xd2,0xcb,0xcf,0xd0,0xca,0xd8,0xd7,0xce,0xfc,//B
  0xee,0xa0,0xa1,0xe6,0xa4,0xa5,0xe4,0xa3,0xe5,0xa8,0xa9,0xaa,0xab,0xac,0xad,0xae,//C
  0xaf,0xef,0xe0,0xe1,0xe2,0xe3,0xa6,0xa2,0xec,0xeb,0xa7,0xe8,0xed,0xe9,0xe7,0xea,//D
  0x9e,0x80,0x81,0x96,0x84,0x85,0x94,0x83,0x95,0x88,0x89,0x8a,0x8b,0x8c,0x8d,0x8e,//E
  0x8f,0x9f,0x90,0x91,0x92,0x93,0x86,0x82,0x9c,0x9b,0x87,0x98,0x9d,0x99,0x97,0x9a //F
  };
 char cFTN2INET[]={//cOEM2KOI[]={
// 0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F
  0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0a,0x0b,0x0c,0x0d,0x0e,0x0f,//0
  0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1a,0x1b,0x1c,0x1d,0x1e,0x1f,//1
  0x20,0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,0x2a,0x2b,0x2c,0x2d,0x2e,0x2f,//2
  0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3a,0x3b,0x3c,0x3d,0x3e,0x3f,//3
  0x40,0x41,0x42,0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4a,0x4b,0x4c,0x4d,0x4e,0x4f,//4
  0x50,0x51,0x52,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5a,0x5b,0x5c,0x5d,0x5e,0x5f,//5
  0x60,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6a,0x6b,0x6c,0x6d,0x6e,0x6f,//6
  0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7a,0x7b,0x7c,0x7d,0x7e,0x7f,//7
  0xe1,0xe2,0xf7,0xe7,0xe4,0xe5,0xf6,0xfa,0xe9,0xea,0xeb,0xec,0xed,0xee,0xef,0xf0,//8
  0xf2,0xf3,0xf4,0xf5,0xe6,0xe8,0xe3,0xfe,0xfb,0xfd,0xff,0xf9,0xf8,0xfc,0xe0,0xf1,//9
  0xc1,0xc2,0xd7,0xc7,0xc4,0xc5,0xd6,0xda,0xc9,0xca,0xcb,0xcc,0xcd,0xce,0xcf,0xd0,//A
  0x90,0x91,0x92,0x81,0x87,0xb2,0xb4,0xa7,0xa6,0xb5,0xa1,0xa8,0xae,0xad,0xac,0x83,//B
  0x84,0x89,0x88,0x86,0x80,0x8a,0xaf,0xb0,0xab,0xa5,0xbb,0xb8,0xb1,0xa0,0xbe,0xb9,//C
  0xba,0xb6,0xb7,0xaa,0xa9,0xa2,0xa4,0xbd,0xbc,0x85,0x82,0x8d,0x8c,0x8e,0x8f,0x8b,//D
  0xd2,0xd3,0xd4,0xd5,0xc6,0xc8,0xc3,0xde,0xdb,0xdd,0xdf,0xd9,0xd8,0xdc,0xc0,0xd1,//E
  0xb3,0xa3,0x99,0x98,0x93,0x9b,0x9f,0x97,0x9c,0x95,0x9e,0x96,0xbf,0x9d,0x94,0x9a,//F
};
//---------------------------------------------------------------------------

void __fastcall Transliterate( char *Source,  char *Dest,  char *Table)
{
  asm
  {
//        push  esi
//        push  edi

        mov   ebx,ecx
        mov   ecx,eax
//ebx -Table
//ecx - Source
//edx - Dest
l1:
        mov   al,[ecx]
        or    al,al
        jz    done
        xlat
        mov   [edx],al
        inc   edx
        inc   ecx
        jmp   l1
done:
//        pop   edi
//        pop   esi
  }
}
//---------------------------------------------------------------------------
void __fastcall N2H(char *Source, char *Dest)
{
  asm
  {
//        push  esi
//        push  edi

        mov   ebx,ecx
        mov   ecx,eax
//ebx -Table
//ecx - Source
//edx - Dest
n1:
        mov   al,[ecx]
        or    al,al
        jz    n_done
        cmp   al,0x8d
        jne   n2
        mov   al,'H'
n2:
        mov   [edx],al
        inc   edx
        inc   ecx
        jmp   n1
n_done:
//        pop   edi
//        pop   esi
  }

}
//---------------------------------------------------------------------------
void __fastcall OEM2KOI( char *Source,  char *Dest)
{
  TraceS("");
  Transliterate(Source,Dest,cFTN2INET);
  TraceS("");
}
//---------------------------------------------------------------------------
void __fastcall KOI2OEM( char *Source,  char *Dest)
{
  TraceS("");
  Transliterate(Source,Dest,cINET2FTN);
  TraceS("");
}
//---------------------------------------------------------------------------
void __fastcall LoadTransTable(char * FileName, char *Table)
{
//char cString[1024];
static int iScanfRes;
static int Value;
FILE *fTbl;
unsigned char ucTableIndex=0;
short sLineIndex;

  fTbl=fopen(FileName,"r");
  if(fTbl)
  {
    while(!feof(fTbl))
    {

//      if(fgets(cString,1024,fTbl))
      iScanfRes=fscanf(fTbl,"%x",&Value);
      if(iScanfRes==EOF)
        break;
      if(iScanfRes)
      {
        Table[ucTableIndex]=Value;
        ucTableIndex++;
        if(!ucTableIndex)
          break;
      }
    }
    fclose(fTbl);
  }
}
//---------------------------------------------------------------------------
void __fastcall Load_INET2FTN_Table(char * FileName)
{
  LoadTransTable(FileName,cINET2FTN);
}
//---------------------------------------------------------------------------
void __fastcall Load_FTN2INET_Table(char * FileName)
{
  LoadTransTable(FileName,cFTN2INET);
}
//---------------------------------------------------------------------------

