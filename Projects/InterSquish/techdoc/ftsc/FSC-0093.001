 | Document: FSC-0093
 | Version:  001
 | Date:     13 September, 1996
 | Title:    Reduced seen-by lines
 | Author:   Frank Ellermann, 2:240/5815.1


  Reduced seen-by lines
  Frank Ellermann, 2:240/5815.1


  Abstract
  --------
  A way to save great amounts (estimated 10 %) of echo mail traffic by
  reducing "seen by" informations, compatible with existing echo mail
  tossers conforming to FTS-0004.


  Definitions
  -----------
  A thorough understanding of FTS-0004 is required, the reader should
  be familiar with PATH and SEEN-BY lines in echo mail, illegal and
  legal echo mail distribution topologies, i.e. dup-rings, as well
  as with some pre-requisite knowledge of zones, 4D and 2D addresses,
  and the "sticky" 2D notation in PATH and SEEN-BY lines.

  PATH: path lines as specified in FTS-0004
  FSB:  full seen-by informations as specified in FTS-0004
  TSB:  tiny seen-by informations as mentioned in FTS-0004, see below
  RSB:  reduced seen-by informations specified below
  dupe: multiple arrival of the same echo mail (e.g. different paths)


  Examples of echo mail distribution topologies
  ---------------------------------------------
  In all examples a) to d) echo mail entered at system 1 is sent to
  systems 2 and 3 with FSB 1 2 3. Therefore system 2 (3) knows, that
  system 3 (2) already got this mail, topology a) is perfectly legal.

  a) 1 - 3  b) 1 - 3  c) 1 - 3  d) 1 - 2
     | /       |   |     | / |     | X |
     2         2 - 4     2 - 4     2 - 4

  In the exanmples b) and c) both systems 2 and 3 forward all mails
  from system 1 to system 4, these topologies contain a dup-ring and
  are therefore illegal following FTS-0004.

  The examples a) and d) show fully connected polygons with three or
  four nodes. In example d) a mail entered at system 1 is sent to
  systems 2, 3, and 4 with FSB 1 2 3 4. The topologies a) and d) are
  perfectly legal, there are no dupes caused by distribution.

  In example b) each mail entered at system 1 reaching system 4 via
  system 2 carries FSB 1 2 3 4, therefore system 4 will not forward
  such mails to 3. Using TSB at system 2 the same mails would carry
  TSB 2 4, therefore system 4 would forward them to 3 as dupes.

  Note that illegal topologies as in example b) and c) cause dupes
  with either FSB or TSB. The real problem with TSB is example b),
  as it allows for loop mails on the dup-ring 1 - 2 - 3 - 4 - ...
  and vice versa, if no additional checks for dupes are employed.

  With RSB (specified below) systems contained in the PATH are not
  stripped from the seen-by informations, therefore RSB avoid loop
  mail much like FSB.


  FSB algorithm
  -------------
  1) add own system to the PATH.
  2) all area links not contained in the FSB qualify as recipients.
  3) add own address(es) to the FSB set if not already contained.
  4) add recipients to FSB, sort FSB, forward mail to recipients.


  TSB algorithm
  -------------
  1) add own system to the PATH.
  2) all area links not contained in the TSB qualify as recipients.
  3) strip old TSB and start new TSB with own address(es).
  4) add recipients to TSB, sort TSB and forward mail to recipients.


  RSB algorithm
  -------------
  1) add own system to the PATH.
  2) all area links not contained in the RSB qualify as recipients.
  3) strip RSB addresses not matching an address in the PATH, then
     add own address(es) to the RSB set if not already contained.
  4) add recipients to RSB, sort RSB and forward mail to recipients.


  PATH considerations
  -------------------
  There are 2 problems with the PATH kludge as specified in FTS-0004:

  First like in the FSB the addresses in the PATH are 2D, and having
  the same 2D address in different zones is possible. Therefore zone
  gates are required to use the TSB algorithm. Unfortunately the PATH
  is forwarded without regarding zone gating, therefore detection of
  loop mail based solely on the PATH could be erroneous.

  Further FTS-0004 (written 1989) expects future echo mail tossers to
  implement PATH support, but doesn't require this support from old
  implementations. Strictly spoken the PATH is still only an option.

  In some areas of FidoNet (e.g. in zone 2) at least all non-terminal
  nodes are required to fully support the PATH line, therefore this
  problem will probably not show up in praxis. Of course any tosser
  implementing the RSB feature is required to fully support the PATH.


  Summary
  -------
  To show the benfits of RSB compared with FSB assume the following:

  An echo mail travels from node to echo hub, host, major star, echo
  host, hub, and finally arrives at a recipient. Each routing system
  has 10 links, i.e. FSB at the recipient contain 51 addresses, about
  400 characters, but RSB only 15 addresses in about 150 characters.

  Therefore in an echo mail with 2500 characters about 10 % of its
  size can be reduced using RSB in favour of FSB. If this estimation
  is applicable on world wide FidoNet echo mail traffic, RSB can save
  us an immense amount of costs.

  This document can be adopted by the FTSC as FTS, in this case it
  has to be regarded as an addition to FTS-0004 with the extension,
  that all non-terminal nodes are required to support PATH lines as
  specified in FTS-0004.

  For additional informations (e.g. aspects of zone gating) feel free
  to send mails to Frank Ellermann 2:240/5815 or leo@bfispc.hanse.de

- eof -
